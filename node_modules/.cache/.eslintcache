[{"/home/mohamed/Desktop/tip-calculator/src/index.jsx":"1","/home/mohamed/Desktop/tip-calculator/src/reportWebVitals.js":"2","/home/mohamed/Desktop/tip-calculator/src/App.jsx":"3","/home/mohamed/Desktop/tip-calculator/src/Context.jsx":"4","/home/mohamed/Desktop/tip-calculator/src/components/Result.jsx":"5","/home/mohamed/Desktop/tip-calculator/src/components/Action.jsx":"6","/home/mohamed/Desktop/tip-calculator/src/data.js":"7"},{"size":585,"mtime":1644786071219,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1644786071219,"results":"10","hashOfConfig":"9"},{"size":293,"mtime":1644786674625,"results":"11","hashOfConfig":"9"},{"size":705,"mtime":1644786071219,"results":"12","hashOfConfig":"9"},{"size":1233,"mtime":1644789007535,"results":"13","hashOfConfig":"9"},{"size":1689,"mtime":1644789384999,"results":"14","hashOfConfig":"9"},{"size":193,"mtime":1644786071219,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3fjiyl",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mohamed/Desktop/tip-calculator/src/index.jsx",[],[],"/home/mohamed/Desktop/tip-calculator/src/reportWebVitals.js",[],[],"/home/mohamed/Desktop/tip-calculator/src/App.jsx",[],[],"/home/mohamed/Desktop/tip-calculator/src/Context.jsx",["40","41"],[],"import React,{useContext, useState} from \"react\";\n\nconst AppContext = React.createContext()\nexport const AppProvider = ({children}) => {\n\tconst [amount, setAmount] = useState(0);\n\tconst [total, setTotal] = useState(0);\n\tconst [tip, setTip] = useState('');\n\tconst [bill, setBill] = useState('');\n\tconst [nbrOfPeople, setNbrOfPeople] = useState('');\n\tconst [custom, setCustom] = useState('');\n\n\treturn (\n\t\t<AppContext.Provider\n\t\t\tvalue={{\n\t\t\t\tsetAmount,\n\t\t\t\tsetTotal,\n\t\t\t\tsetTip,\n\t\t\t\tsetBill,\n\t\t\t\tsetNbrOfPeople,\n\t\t\t\tbill,\n\t\t\t\ttip,\n\t\t\t\tnbrOfPeople,\n\t\t\t\tcustom,\n\t\t\t\tsetCustom,\n\t\t\t}}\t\n\t\t>\n\t\t\t{children}\n\t\t</AppContext.Provider>\n\t)\n};\n\nexport const useGlobalContext = () => {\n\treturn useContext(AppContext);\n}\n","/home/mohamed/Desktop/tip-calculator/src/components/Result.jsx",["42","43","44"],[],"import React from 'react'\nimport { useEffect } from 'react/cjs/react.development';\nimport { useGlobalContext } from '../Context'\n\n\n\nconst Result = () => {\n\tconst {bill, tip, nbrOfPeople,\n\t\tsetTip, setBill,setNbrOfPeople, custom,setCustom} = useGlobalContext()\n\tlet tipAmount = 0;\n\tlet total = 0;\n\tif ((tip || custom) && bill && nbrOfPeople)\n\t{\n\t\tlet tipValue;\n\t\tif (tip === '' ? tipValue = custom : tipValue = tip)\n\t\tif (tip != '' && custom != '')\n\t\t\ttipValue = custom\n\t\tconsole.log('tipValue:', tipValue);\n\t\ttipAmount = ((bill * tipValue ) / 100) / nbrOfPeople\n\t\ttotal = bill / nbrOfPeople + tipAmount\n\t\t\n\t}\n\tconst resetValue = () => {\n\t\tsetTip('');\n\t\tsetBill('');\n\t\tsetNbrOfPeople('');\n\t\tsetCustom('');\n\t}\n\treturn (\n\t\t<div className='result'>\n\t\t\t<div className=\"tip-amount flex\">\n\t\t\t\t<div className=\"text\">\n\t\t\t\t\t<h4>Tip Amount</h4>\n\t\t\t\t\t<p>/person</p>\n\t\t\t\t</div>\n\t\t\t\t<h1 className=\"tip-value\">${tipAmount.toFixed(2)}</h1>\n\t\t\t</div>\n\t\t\t<div className=\"total flex\">\n\t\t\t\t<div className=\"text\">\n\t\t\t\t\t<h4>Total</h4>\n\t\t\t\t\t<p>/person</p>\n\t\t\t\t</div>\n\t\t\t\t<h1 className=\"total-value\">${total.toFixed(2)}</h1>\n\t\t\t</div>\n\t\t\t<button \n\t\t\t\tclassName=\"btn reset-btn\"\n\t\t\t\tonClick={resetValue}\n\t\t\t>Reset</button>\n\t\t</div>\n\t)\n}\n\nexport default Result","/home/mohamed/Desktop/tip-calculator/src/components/Action.jsx",["45","46","47","48"],[],"import React, { useState, useEffect } from 'react'\nimport { useGlobalContext } from '../Context'\nimport data from '../data'\n\nconst Action = () => {\n  const {setTip, setBill,setNbrOfPeople, bill, tip, nbrOfPeople, custom, setCustom} = useGlobalContext();\n\n  const  handleTip = (value) => {\n    if (custom != '')\n      setCustom('')\n    setTip(value)\n  }\n  return (\n\t<div className='action'>\n    <label htmlFor=\"\" >\n      <p className=\"input-text\">Bill</p>\n      <input type=\"text\" name=\"bill\" className=\"bill\"  onChange={e => setBill(e.target.value)} value={bill}/>\n    </label>\n    \n    <div className=\"tip\">\n      <p className=\"input-text\">Select Tip %</p>\n      <div className=\"tip-grid\">\n        {data.map((item)=>{\n          const {id, value} = item;\n          return (\n            <button \n              className='btn tip-btn' \n              key={id}\n              onClick={() => handleTip(value)}\n              >\n              {value}%\n              </button>\n          )\n        })}\n        <div className=\"custom\">\n          <input \n            type=\"text\"  \n            placeholder='Custom' \n            className='custom-input'\n            value={custom}\n            onChange={e => setCustom(e.target.value)}/>\n        </div>\n      </div>\n      <label htmlFor=\"\">\n        <p className=\"input-text\">Number of People</p> \n        <input \n          type=\"text\" \n          name=\"number-of-peole\" \n          id=\"nbr-people\"\n          value={nbrOfPeople}\n          onChange={e => setNbrOfPeople(e.target.value)}\n        />\n        <p className={nbrOfPeople === '0' ? 'error-msg show-msg' : 'error-msg'}>Can't be zero</p>\n      </label>\n    </div>\n  </div>\n  )\n}\n\nexport default Action","/home/mohamed/Desktop/tip-calculator/src/data.js",[],[],{"ruleId":"49","severity":1,"message":"50","line":5,"column":9,"nodeType":"51","messageId":"52","endLine":5,"endColumn":15},{"ruleId":"49","severity":1,"message":"53","line":6,"column":9,"nodeType":"51","messageId":"52","endLine":6,"endColumn":14},{"ruleId":"49","severity":1,"message":"54","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":19},{"ruleId":"55","severity":1,"message":"56","line":16,"column":11,"nodeType":"57","messageId":"58","endLine":16,"endColumn":13},{"ruleId":"55","severity":1,"message":"56","line":16,"column":27,"nodeType":"57","messageId":"58","endLine":16,"endColumn":29},{"ruleId":"49","severity":1,"message":"59","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"49","severity":1,"message":"54","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":36},{"ruleId":"49","severity":1,"message":"60","line":6,"column":48,"nodeType":"51","messageId":"52","endLine":6,"endColumn":51},{"ruleId":"55","severity":1,"message":"56","line":9,"column":16,"nodeType":"57","messageId":"58","endLine":9,"endColumn":18},"no-unused-vars","'amount' is assigned a value but never used.","Identifier","unusedVar","'total' is assigned a value but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'tip' is assigned a value but never used."]