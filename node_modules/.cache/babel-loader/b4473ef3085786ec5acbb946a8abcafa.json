{"ast":null,"code":"var _jsxFileName = \"/home/mohamed/Desktop/tip-calculator/src/components/Action.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from '../Context';\nimport data from '../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Action = () => {\n  _s();\n\n  const {\n    setTip,\n    setBill,\n    setNbrOfPeople,\n    bill,\n    tip,\n    nbrOfPeople,\n    custom,\n    setCustom\n  } = useGlobalContext();\n  useEffect(() => {});\n  console.log(nbrOfPeople);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"action\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-text\",\n        children: \"Bill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"bill\",\n        className: \"bill\",\n        onChange: e => setBill(e.target.value),\n        value: bill\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tip\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-text\",\n        children: \"Select Tip %\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tip-grid\",\n        children: [data.map(item => {\n          const {\n            id,\n            value\n          } = item;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn tip-btn\",\n            onClick: () => setTip(value),\n            children: [value, \"%\"]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Custom\",\n            className: \"custom-input\",\n            value: custom,\n            onChange: e => setCustom(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"input-text\",\n          children: \"Number of People\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"number-of-peole\",\n          id: \"nbr-people\",\n          value: nbrOfPeople,\n          onChange: e => setNbrOfPeople(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: nbrOfPeople === '0' ? 'error-msg show-msg' : 'error-msg',\n          children: \"Can't be zero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 2\n  }, this);\n};\n\n_s(Action, \"MZBK3u/oqMiUiS/mbXk2mwtZCnY=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = Action;\nexport default Action;\n\nvar _c;\n\n$RefreshReg$(_c, \"Action\");","map":{"version":3,"sources":["/home/mohamed/Desktop/tip-calculator/src/components/Action.jsx"],"names":["React","useState","useEffect","useGlobalContext","data","Action","setTip","setBill","setNbrOfPeople","bill","tip","nbrOfPeople","custom","setCustom","console","log","e","target","value","map","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,OAAT;AAAiBC,IAAAA,cAAjB;AAAiCC,IAAAA,IAAjC;AAAuCC,IAAAA,GAAvC;AAA4CC,IAAAA,WAA5C;AAAyDC,IAAAA,MAAzD;AAAiEC,IAAAA;AAAjE,MAA8EV,gBAAgB,EAApG;AACAD,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,CAAT;AAGAY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,sBACD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACG;AAAO,MAAA,OAAO,EAAC,EAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,SAAS,EAAC,MAAzC;AAAiD,QAAA,QAAQ,EAAEK,CAAC,IAAIT,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvE;AAAyF,QAAA,KAAK,EAAET;AAAhG;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAMG;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,mBACGL,IAAI,CAACe,GAAL,CAAUC,IAAD,IAAQ;AAChB,gBAAM;AAACC,YAAAA,EAAD;AAAKH,YAAAA;AAAL,cAAcE,IAApB;AACA,8BACE;AACE,YAAA,SAAS,EAAC,aADZ;AAGE,YAAA,OAAO,EAAE,MAAMd,MAAM,CAACY,KAAD,CAHvB;AAAA,uBAKGA,KALH;AAAA,aAEOG,EAFP;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAXA,CADH,eAaE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,QAFd;AAGE,YAAA,SAAS,EAAC,cAHZ;AAIE,YAAA,KAAK,EAAET,MAJT;AAKE,YAAA,QAAQ,EAAEI,CAAC,IAAIH,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAL1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAwBE;AAAO,QAAA,OAAO,EAAC,EAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,iBAFP;AAGE,UAAA,EAAE,EAAC,YAHL;AAIE,UAAA,KAAK,EAAEP,WAJT;AAKE,UAAA,QAAQ,EAAEK,CAAC,IAAIR,cAAc,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAL/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AAAG,UAAA,SAAS,EAAEP,WAAW,KAAK,GAAhB,GAAsB,oBAAtB,GAA6C,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AA6CD,CAnDD;;GAAMN,M;UACgFF,gB;;;KADhFE,M;AAqDN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useGlobalContext } from '../Context'\nimport data from '../data'\n\nconst Action = () => {\n  const {setTip, setBill,setNbrOfPeople, bill, tip, nbrOfPeople, custom, setCustom} = useGlobalContext();\n  useEffect(()=>{\n    \n  })\n  console.log(nbrOfPeople);\n  return (\n\t<div className='action'>\n    <label htmlFor=\"\" >\n      <p className=\"input-text\">Bill</p>\n      <input type=\"text\" name=\"bill\" className=\"bill\"  onChange={e => setBill(e.target.value)} value={bill}/>\n    </label>\n    \n    <div className=\"tip\">\n      <p className=\"input-text\">Select Tip %</p>\n      <div className=\"tip-grid\">\n        {data.map((item)=>{\n          const {id, value} = item;\n          return (\n            <button \n              className='btn tip-btn' \n              key={id}\n              onClick={() => setTip(value)}\n              >\n              {value}%\n              </button>\n          )\n        })}\n        <div className=\"custom\">\n          <input \n            type=\"text\"  \n            placeholder='Custom' \n            className='custom-input'\n            value={custom}\n            onChange={e => setCustom(e.target.value)}/>\n        </div>\n      </div>\n      <label htmlFor=\"\">\n        <p className=\"input-text\">Number of People</p> \n        <input \n          type=\"text\" \n          name=\"number-of-peole\" \n          id=\"nbr-people\"\n          value={nbrOfPeople}\n          onChange={e => setNbrOfPeople(e.target.value)}\n        />\n        <p className={nbrOfPeople === '0' ? 'error-msg show-msg' : 'error-msg'}>Can't be zero</p>\n      </label>\n    </div>\n  </div>\n  )\n}\n\nexport default Action"]},"metadata":{},"sourceType":"module"}