{"ast":null,"code":"var _jsxFileName = \"/home/mohamed/Desktop/tip-calculator/src/components/Result.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react/cjs/react.development';\nimport { useGlobalContext } from '../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Result = () => {\n  _s();\n\n  const {\n    bill,\n    tip,\n    nbrOfPeople,\n    setTip,\n    setBill,\n    setNbrOfPeople,\n    custom,\n    setCustom\n  } = useGlobalContext();\n  console.log('tip:', tip);\n  console.log('bill:', bill);\n  console.log('nbr:', nbrOfPeople);\n  console.log('custom:', custom);\n  let tipAmount = 0;\n  let total = 0;\n\n  if ((tip || custom) && bill && nbrOfPeople) {\n    let tipValue;\n    if (tip === '' ? tipValue = custom : tipValue = tip) console.log('tipValue:', tipValue);else if (tip) tipAmount = bill * tipValue / 100 / nbrOfPeople;\n    total = bill / nbrOfPeople + tipAmount;\n  }\n\n  const resetValue = () => {\n    setTip('');\n    setBill('');\n    setNbrOfPeople('');\n    setCustom('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tip-amount flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Tip Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"/person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tip-value\",\n        children: [\"$\", tipAmount.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"/person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"total-value\",\n        children: [\"$\", total.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn reset-btn\",\n      onClick: resetValue,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Result, \"r8X5zVaoXAPwu5qMwBHKbKLPuHE=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/home/mohamed/Desktop/tip-calculator/src/components/Result.jsx"],"names":["React","useEffect","useGlobalContext","Result","bill","tip","nbrOfPeople","setTip","setBill","setNbrOfPeople","custom","setCustom","console","log","tipAmount","total","tipValue","resetValue","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,gBAAT,QAAiC,YAAjC;;;AAIA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACpB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,GAAP;AAAYC,IAAAA,WAAZ;AACLC,IAAAA,MADK;AACGC,IAAAA,OADH;AACWC,IAAAA,cADX;AAC2BC,IAAAA,MAD3B;AACkCC,IAAAA;AADlC,MAC+CT,gBAAgB,EADrE;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBR,GAAnB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBT,IAApB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBP,WAAnB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBH,MAAtB;AACA,MAAII,SAAS,GAAG,CAAhB;AACA,MAAIC,KAAK,GAAG,CAAZ;;AAEA,MAAI,CAACV,GAAG,IAAIK,MAAR,KAAmBN,IAAnB,IAA2BE,WAA/B,EACA;AACC,QAAIU,QAAJ;AACA,QAAIX,GAAG,KAAK,EAAR,GAAaW,QAAQ,GAAGN,MAAxB,GAAiCM,QAAQ,GAAGX,GAAhD,EACCO,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBG,QAAzB,EADD,KAEK,IAAIX,GAAJ,EACLS,SAAS,GAAKV,IAAI,GAAGY,QAAR,GAAqB,GAAtB,GAA6BV,WAAzC;AACAS,IAAAA,KAAK,GAAGX,IAAI,GAAGE,WAAP,GAAqBQ,SAA7B;AAEA;;AACD,QAAMG,UAAU,GAAG,MAAM;AACxBV,IAAAA,MAAM,CAAC,EAAD,CAAN;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACA,GALD;;AAMA,sBACC;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAKC;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,wBAA4BG,SAAS,CAACI,OAAV,CAAkB,CAAlB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cALD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAQC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAKC;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,wBAA8BH,KAAK,CAACG,OAAN,CAAc,CAAd,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cALD;AAAA;AAAA;AAAA;AAAA;AAAA,YARD,eAeC;AACC,MAAA,SAAS,EAAC,eADX;AAEC,MAAA,OAAO,EAAED,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAsBA,CAhDD;;GAAMd,M;UAEgDD,gB;;;KAFhDC,M;AAkDN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport { useEffect } from 'react/cjs/react.development';\nimport { useGlobalContext } from '../Context'\n\n\n\nconst Result = () => {\n\tconst {bill, tip, nbrOfPeople,\n\t\tsetTip, setBill,setNbrOfPeople, custom,setCustom} = useGlobalContext()\n\tconsole.log('tip:',tip);\n\tconsole.log('bill:',bill);\n\tconsole.log('nbr:',nbrOfPeople);\n\tconsole.log('custom:',custom);\n\tlet tipAmount = 0;\n\tlet total = 0;\n\t\n\tif ((tip || custom) && bill && nbrOfPeople)\n\t{\n\t\tlet tipValue;\n\t\tif (tip === '' ? tipValue = custom : tipValue = tip)\n\t\t\tconsole.log('tipValue:', tipValue);\n\t\telse if (tip )\n\t\ttipAmount = ((bill * tipValue ) / 100) / nbrOfPeople\n\t\ttotal = bill / nbrOfPeople + tipAmount\n\t\t\n\t}\n\tconst resetValue = () => {\n\t\tsetTip('');\n\t\tsetBill('');\n\t\tsetNbrOfPeople('');\n\t\tsetCustom('');\n\t}\n\treturn (\n\t\t<div className='result'>\n\t\t\t<div className=\"tip-amount flex\">\n\t\t\t\t<div className=\"text\">\n\t\t\t\t\t<h4>Tip Amount</h4>\n\t\t\t\t\t<p>/person</p>\n\t\t\t\t</div>\n\t\t\t\t<h1 className=\"tip-value\">${tipAmount.toFixed(2)}</h1>\n\t\t\t</div>\n\t\t\t<div className=\"total flex\">\n\t\t\t\t<div className=\"text\">\n\t\t\t\t\t<h4>Total</h4>\n\t\t\t\t\t<p>/person</p>\n\t\t\t\t</div>\n\t\t\t\t<h1 className=\"total-value\">${total.toFixed(2)}</h1>\n\t\t\t</div>\n\t\t\t<button \n\t\t\t\tclassName=\"btn reset-btn\"\n\t\t\t\tonClick={resetValue}\n\t\t\t>Reset</button>\n\t\t</div>\n\t)\n}\n\nexport default Result"]},"metadata":{},"sourceType":"module"}